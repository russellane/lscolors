[project]
name = "lscolors"
version = "1.0.0"
description = "dircolors utilities"
authors = [
    {name = "Russel Lane", email = "russel@rlane.com"}
]
license = {text = "MIT"}
readme = "README.md"
keywords = ["dircolors", "xterm-256color", "color-scheme", "terminal", "shell", "ls", "tree"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Topic :: System :: Console Fonts",
    "Topic :: System :: Filesystems",
    "Topic :: System :: Shells",
    "Topic :: Terminals",
    "Topic :: Utilities"
]
requires-python = ">=3.8"
dependencies = [
    "ansicolors>=1.1.8",
    "argcomplete>=2.0.0",
    "pyyaml>=6.0",
]

[project.urls]
Homepage = "https://github.com/russellane/lscolors"

[project.scripts]
lscolors = "lscolors.cli:main"

[project.optional-dependencies]
[tool.pdm]

[tool.pdm.dev-dependencies]
dev = [
    "black>=22.1.0",
    "flake8-bugbear>=22.1.11",
    "flake8-pydocstyle>=0.2.0",
    "flake8-simplify>=0.18.0",
    "flake8>=4.0.1",
    "isort>=5.10.1",
    "pylint>=2.12.2",
    "pytest>=7.0.1",
]

[tool.pdm.scripts]
_.env = {PKGNAME="lscolors", PKGDIRS = "lscolors tests", VERBOSE=""}

rebuild.shell = "pdm run clean && pdm install && pdm build"
# depends on: `pip install --user pdm-bump`
bump-micro.shell = "pdm bump micro && pdm run rebuild"

# .vimrc: set makeprg=pdm\ build
pre_build.shell = "pdm run tags && pdm run lint && pdm run test"
post_build.shell = "pdm run version"

help.shell = "pdm run python -m $PKGNAME --help"
version.shell = "pdm run python -m $PKGNAME --version"
tags.shell = "ctags -R --languages=python $PKGDIRS __pypackages__"

lint.shell = "pdm run black && pdm run flake8 && pdm run isort && pdm run pylint"
black.shell = "pdm run python -m black -q $VERBOSE $PKGDIRS"
flake8.shell = "pdm run python -m flake8 $VERBOSE $PKGDIRS"
isort.shell = "pdm run python -m isort $VERBOSE $PKGDIRS"
pylint.shell = "pdm run python -m pylint $VERBOSE $PKGDIRS"

test.shell = "pdm run pytest"
pytest.shell = "pdm run python -m pytest --exitfirst --showlocals --verbose tests"

publish.shell = """
cd dist; echo *.whl |
cpio -pdmuv `pip config get global.find-links`
"""

clean.shell = """
rm -rf ./__pypackages__ ./.pytest_cache ./dist ./tags;
find . -type f -name '*.py[co]' -delete &&
find . -type d -name __pycache__ -delete
"""

#doc.shell = """
#export COLUMNS=97;
#pdm run python -m $PKGNAME --help |
#pdm run python -m mandown --width 89 --use-config >README.md
#"""

#xxinstall.shell = "pip install --user dist/*.whl"
#uninstall.shell = "pip uninstall $PACKAGE"
#reinstall.shell = "pdm run uninstall; pdm run xxinstall"

[tool.pytest.ini_options]
addopts = "--ignore=__pypackages__/"

[tool.black]
line-length = "97"

[tool.isort]
line_length = "97"
profile = "black"
force_single_line = "true"

[tool.pylint.format]
max-line-length = "97"

[tool.pylint.messages_control]
enable = ["useless-suppression"]
fail-on = ["I0021"]             # useless-suppression
disable = [
    "C0330", "C0326",           # black
    "R0801",                    # Similar lines in 2 files - cleo commands
]

[tool.pydocstyle]
convention = "google"
add-ignore = [
    "D105",     # pep257 numpy google   # Missing docstring in magic method
    "D202",     # pep257 numpy google   # No blank lines allowed after function docstring
]

[build-system]
requires = ["pdm-pep517"]
build-backend = "pdm.pep517.api"

# vim: set ts=4 sw=4 et:
